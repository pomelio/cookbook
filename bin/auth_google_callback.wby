import ext.google as google;
import ext.web as web;
import ext.github as github;
import std.array as arr;
import ext.jwt as jwt;
import ext.mustache as mch;

let header = mch.renderTemplate('/docs/header.mustache');
let header = mch.renderTemplate('/docs/header.mustache');

let footer = mch.renderTemplate('/docs/footer.mustache');




let {code} = web.query();

let auth_result = google.get_auth_result(code, {}, {});
let tokens = google.get_access_tokens(auth_result);
let google_client = google.new_client(tokens, {});


let user_info = google.get_user_info(google_client);
user_info['provider'] = 'google';

let user_info_docs_path = '/docs/data/user_info.json';
let user_info_docs = [];

let user_info_docs_json = github.get_content(user_info_docs_path);
if user_info_docs_json != undefined {
      user_info_docs = parse_json(user_info_docs_json);
}

let user_info_doc = arr.find(user_info_docs, |u| => u['id'] == user_info['id']);
if !user_info_doc || user_info_doc != user_info {
      user_info_docs = arr.filter(user_info_docs, |u| => u['id'] != user_info['id']);
      arr.push(user_info_docs, user_info);
      github.save_text(user_info_docs_path, stringify_json(user_info_docs));
}

let user_id = user_info['id'];
let provider = user_info['provider'];
let user_token = jwt.sign({id: user_id, provider});
user_info['token'] = user_token;

let user_info_json = stringify_json(user_info);

let html = mch.renderTemplate('/docs/login_callback.mustache');

web.body(html);